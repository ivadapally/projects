Title,Score,URL,Comments Count,Author,Top Comments
Polars vs Pandas,204,https://www.reddit.com/r/Python/comments/1jg402b/polars_vs_pandas/,176,thoughtful-curious,"['You’re gonna learn all of them, whether you like it or not. I speak from experience.', 'I ""grew up"" on Pandas, but moved to Polars. No more ""reset_index"" and ""inplace"" confusion. Feels like there\'s only one right way to do it in Polars, but so much bloat in Pandas API.\n\nI do like Pandas when it comes to certain things where there is an obvious index like time signals. But Polars seems to handle date time much better.\n\nWhen it comes to filtering and queries, I like Polars.\n\nIn both, I\'ve made several df and series ""helper"" attributes to clean up the syntax.', ""Polars. It has a better API, and will continue to become the standard for years.\n\nYou too will one day run up against the speed and memory usage limits of Pandas. No one's data for learing learning is large - that's not the point though."", 'I think it\'s relevant to see Wes Mckinney\'s (creator of Pandas) reflections: [https://wesmckinney.com/blog/looking-back-15-years/](https://wesmckinney.com/blog/looking-back-15-years/)\n\nIn his words, Pandas had accumulated rough edges and its ""eager"" approach to calculate made it less efficient for query planning.\n\nThe future lies with his next project Arrow, which is coincidentally the format that Polars is built around. For me, if you really had to choose between learning either Pandas or Polars, the choice is a no-brainer.', 'People say about Polars ""I came for the speed, but stayed for the API""']"
Lihil — a high performance modern web framework for enterprise web development in python,169,https://www.reddit.com/r/Python/comments/1jh6rt4/lihil_a_high_performance_modern_web_framework_for/,59,Last_Difference9410,"['You’ve got a typo in your docs & tutorials link at the bottom. I’ve spotted half a dozen typos in your documentation as well, just from a quick glance. They seem to be everywhere.\n\nI’m not sure focusing on performance and enterprise is a winner. People who pick Python for their backend are typically doing so for developer ergonomics not performance. Approximately 100% of the things I see labelled as “enterprise” are deeply unpleasant to use and built by people without taste. It’s a negative label as far as I’m concerned.', "">mysterious constructs like *args and **kwargs\n\nI've never heard anything say this but I'd probably actually laugh in their face I had.  Python has less magic syntax than any other language by a country mile.\n\nOtherwise, cool project."", '[deleted]', ""I don't want to discourage new projects and more options, but why did you choose to roll out yet another framework instead of implementing these improvements in an existing one? I'd love to be able to have a better choice in enterprise-grade python web frameworks but a fledgling framework with 2 contributors is a non-starter in enterprise. Why not jump into starlette or litestar or whatever is closest to your vision and shore up their shortcomings instead? They have more contributors, active communities and a lead in current installs and time in production."", ""Interesting. And congratulations 🎉. I'll star it promptly and follow the project. \n\nI suggest you check out the litestar benchmarks repo. I don't think your numbers make sense, probably due to the test methodology itself. \n\nE.g., it's almost impossible for you to be faster than BlackSheep, which is significantly faster than Starlette because it's written in Cython. Also, Robyn, which had a rust runtime and Emmett (same).\n\nLitestar is consistently faster than Starlette in most benchmarks (although subject to some controversy). \n\nFaster pure Python ASGI frameworks include Falcon and Sanic.\n\nYou should also factor in various mime types, e.g. Json, multipart file uploads etc. \n\nFinally, I wouldn't bench dependency injection - except for benchmarks of dependency injection. Although frankly, this is redundant. \n\nBut - to be honest, I think this is unimportant. \n\nIf you want people to use your framework the important thing is really to support it until it's really stable and demonstrates strong stability. This is the most crucial facet.""]"
Announcing Kreuzberg V3.0.0,115,https://www.reddit.com/r/Python/comments/1ji2x08/announcing_kreuzberg_v300/,13,Goldziher,"['Kreuzberg? Named after the Berlin area?', 'Very nice 👍, I’ll check this version soon.\n\nI’ve already adopted the library in my project for pdf extraction.', 'All functions are CPU bounded, I am wondering why you have to make them async?', 'Wilco Wilco', 'Can you bundle this with haystack pls?']"
safe-result: A Rust-inspired Result type for Python to handle errors without try/catch,97,https://www.reddit.com/r/Python/comments/1jimiz0/saferesult_a_rustinspired_result_type_for_python/,54,a_deneb,"['Well done on your project, but you might be interested in \\`returns\\` [https://returns.readthedocs.io/en/latest/index.html#result-container](https://returns.readthedocs.io/en/latest/index.html#result-container) Provides a \\`Result\\` container and lots more.', 'You may have overlooked an existing and popular package [https://returns.readthedocs.io/en/latest/pages/result.html#safe](https://returns.readthedocs.io/en/latest/pages/result.html#safe)', 'I really struggle to see the benefit vs try except.', 'I\'ve worked with (inherited) Python codebases that use an error handling paradigm other than try-except. They always end up with a bunch of unhelpful boilerplate, especially at the points where try-except based code using libraries meets monadic-or-whatever code, and you lose a bunch of ergonomics in the process.\n\nFor example I can\'t do `pudb.post_mortem()` to debug exceptions unless the monadic-or-whatever code has specifically sought to make this possible. I\'m also skeptical that ""traceback preservation"" preserves the full traceback, from where the bad thing happened to where we are now, since I\'ve never seen this work properly.\n\nIn languages where this is already the dominant paradigm you don\'t have these problems, but in Python it\'s just a recipe for unpythonic code.', ""I love Rust. I like Python. As I've learned more Rust, I've embraced parts of it in Python. Dataclasses (the analog to rust struct patterns), strong typing, more builder pattern, avoiding unnecessary mutation. All great things.\n\nThis though? Feels like it's trying a little too hard. Maybe I'm wrong though""]"
Using Polars as a Vector Store - Can a Dataframe library compete?,93,https://www.reddit.com/r/Python/comments/1jgtjnr/using_polars_as_a_vector_store_can_a_dataframe/,8,GioGiac,"[""The performance gap here is that you are calculating exact nearest neighbors, while those other solutions are calculating approximate nearest neighbors. I believe the current SOTA that all of these tools use is HNSW, which is basically a fancy kind of [ball tree](https://scikit-learn.org/stable/modules/neighbors.html#ball-tree) if you want to try your hand at implementing an ANN index.\n\nSince you're open to using plugins, try this polars+lancedb integration: https://blog.lancedb.com/lancedb-polars-2d5eb32a8aa3/"", 'Why not using lancedb?\xa0https://lancedb.github.io/lancedb/', 'Very intersting post, thank you. Nowadays I am experimenting polars and duckdb for one of my projects, hence my thought follows as: you could try duckdb, how it performs in your situation.\n\nhttps://motherduck.com/blog/search-using-duckdb-part-1/', 'Chromadb? - obviously for light weight']"
Is there something better than exceptions?,86,https://www.reddit.com/r/Python/comments/1jf3p1y/is_there_something_better_than_exceptions/,85,lightdarkdaughter,"[""I feel like you're inventing a non-existent problem. There's no way to mix up programmer error with environment error. They're going to be completely different types of exceptions. You generally know what types of exceptions your environment can give you and then you can catch those and react accordingly. So you would never catch the exception of accessing a non-existent element because that can only happen from programmer mistake. You're supposed to run rigorous automated testing to rule out the programmer mistake type of exceptions."", ""> then we have StopIteration exception, which is ... I get why it's implemented the way it's implemented, but if it's not a using exceptions for control flow, I don't know what it is.\n\nThere's a big difference between the language using an exception under the hood, and you implementing control flow with exceptions in your source code.\n\nThe latter makes your code hard to read. The former is just an implementation detail."", '""And people say we should just embrace exceptions, but not use them for flow control""\n\nWho says that? Catching exceptions in Puthon is cheap and it\'s very Pythonic to use exceptions for flow control because of it. LBYL vs EAFP', 'There are a ton of packages that allow you to return Result Types. I love the idea of having all the possible results hinted in the signature, but having two different error patterns is messy...\n\nIn the end, your code will use Result types but every single third party module will use plain Exceptions, so you end up with a Frankenstein.\n\nAnother pythonic pattern is returning `def f() -> GoodResult | None` or if you have multiple errors, `def f() -> tuple[GoodResult | None, Ok | ErrorA | ErrorB | ErrorC]`\n\n```python\n\nres, error = f()\n\nif res is None:\n   match error:\n      ...\n\n```\n\nEdit, the return None pattern is nice because you are forced to handle it by the Type checker, but it falls short if you are using the None type for something that is not an error, like a placeholder in a list or something like that.', ""This is why Rust's mascot is a crab.""]"
reaktiv: the reactive programming lib I wish I had 5 years ago,79,https://www.reddit.com/r/Python/comments/1jh6ghl/reaktiv_the_reactive_programming_lib_i_wish_i_had/,27,loyoan,"[""`schedule` spawns a task I assume? You should make it a context manager, otherwise there's no structured concurrency."", ""Can you say a bit more about the use case for this functionality? Like I think I understand what it's doing, but as a data scientist it's less obvious when you would need these patterns."", ""It's Angular signals in python if I read that correctly, right? \n\nI like it, same with RxPy."", ""personally i only rarely rely on this pattern in backend code. I guess it might depend on what you're doing exactly but to me it feels like an architecture/design problem"", 'Tbf there is Param that does this too :)']"
Any good Python resume projects that AREN'T machine learning?,65,https://www.reddit.com/r/Python/comments/1jf4ce2/any_good_python_resume_projects_that_arent/,39,ok_nooneidk,"['Spin up some good ol CRUD on Flask (some Todo app or calendar, whatever). Connect it to some postgesql. PUT MOST EFFORT INTO DATA ACCESS LAYER. Maintain a nice commit history in git (no ""typo"", ""fix"", ""hotfix2""). PUT THIS ALL IN CONTAINERS and write a script to spin up the app with docker compose.\n\nWeekend project, which I, as a member of the hiring panel, would be really glad and interested to see.\n\nDon\'t overthink, you are not applying for New Business or any creative position. 99% of time SWE, especially in vanilla Python, deals with very simple problems', 'REST / CRUD Apps are always fun, and no matter what you do some one will probably ask you to build one.  Web scrapping / data ""cleaning"" is ML Adjacent but obviously predates it by years and has applications outside of that.  Maybe implement something that\'s purely for developers, like a library that wraps a shitty-to-deal-with but useful C library.', 'It really depends on what kind of position you are interested in. What about a fullstack web app in Python?', 'Write a static site generator.  A Markdown parser.  An implementation of grep.\n\nCheck out one of these datasets and write some code that goes through them and prints some stats: [https://github.com/awesomedata/awesome-public-datasets](https://github.com/awesomedata/awesome-public-datasets)\n\nPick a few things in [Wikifunctions](https://www.wikifunctions.org/wiki/Wikifunctions:Main_Page) and put them to use.\n\nPick something from [here](https://github.com/open-source-ideas/ideas) to implement and play with.', 'With respect to actual human beings looking at your resume -> If you want a project to really stand out it probably needs to incorporate significant domain knowledge related to the field( since this isn’t an ML/adjacent role). If you can’t really do that, doing something extremely unique is probably good. Maybe even hilarious. You might not get points for your ability or from HR for putting a program that tracks how much exercise your cat gets using machine vision and taunting it with a laser pointer when it’s being to lazy, but the people you have to work with with probably think it’s hilarious and want to talk to you.  \nL\n\nPython isn’t getting very close to the metal so the optimizations probably aren’t particularly interesting and they probably wouldn’t look close enough to see if it shows an excellent understanding of Python and creativity. \n\nYou’ll probably get more brownie points to have code that is well-documented, type-hinted, linted, and tested with a coverage report than anything within the actual project tbh.']"
"Wireup 1.0 Released - Performant, concise and type-safe Dependency Injection for Modern Python 🚀",50,https://www.reddit.com/r/Python/comments/1jimec9/wireup_10_released_performant_concise_and/,32,ForeignSource0,"[""What do we gain from this? We've already set up our classes to allow dependency injection during construction, so why not just do it explicitly like that? I don't like the way this is doing some hidden magic.\xa0"", ""I wonder how this compares to discard wrt nestable scopes \n\nAt first glance i can't find a comparable mechanism for entering configured scopes"", ""Why would anyone want dependency injection?\n\nYes, I know it's commonly used in Java. I've written Java for 30 years and had long discussions with Java developers over why they need DI. I still have no answer to why this is necessary.\n\nIMHO you're far better off without it.\n\nEdit: Just to be clear: I'm referring to automatic DI with frameworks etc. Not passing in dependencies from the outside, which is of course good practice."", '🚀 whenever\n\n🔎 I see\n\n😃 emojis \n\n🧠 I don’t \n\n📖 read it', ""I get `DuplicateServiceRegistrationError` exceptions which I wasn't before. Anyone else seeing this?""]"
Playa PDF: A strong pdfminer successor,26,https://www.reddit.com/r/Python/comments/1jfk466/playa_pdf_a_strong_pdfminer_successor/,4,Goldziher,"['Has anyone solved multi page table extraction. \nI am struggling with extracting tables of different formats and multi page tables.', 'They also have PAVÉS built on top of PLAYA which is more of a pdfplumber.six ""replacement"".\n\n- https://github.com/dhdaines/paves\n\n(And a PR to potentially add it as a pdfplumber backend https://github.com/jsvine/pdfplumber/pull/1272)', 'Does it extract content from multiple columns pdf files?']"
Interactive Python Learning Series: From Numbers to Exceptions,24,https://www.reddit.com/r/Python/comments/1jfjmf3/interactive_python_learning_series_from_numbers/,2,Haleshot,['Wow this is really cool! \nOne thing you could definitely add to this would be OOP concepts']
Bugsink: Self-Hosted Error Tracking (written in Python),17,https://www.reddit.com/r/Python/comments/1jjeaxg/bugsink_selfhosted_error_tracking_written_in/,8,klaasvanschelven,"['Are we still doing ""written in Python"" posts here? Or should I have said ""written in Rust"" for big success in the Python world? We\'ll see soon enough!', 'Why this vs self hosted sentry?', ""Looks promising. I've been using Glitchtip so far. Any comparisons?"", 'Bugsink is a cool name, and it sounds useful.  But why are you still using a Github issues page instead of deploying your own product yourselves?  \n\n> [project.urls]\n\n> ...\n\n> issues = ""https://github.com/bugsink/bugsink/issues""\n\n\nhttps://github.com/bugsink/bugsink/blob/3c35ea539861a613bd0e29bcb6bca33e677ff802/pyproject.toml#L31']"
"pnorm: A Simple, Explicit Way to Interact with Postgres",18,https://www.reddit.com/r/Python/comments/1jfuqab/pnorm_a_simple_explicit_way_to_interact_with/,9,Safe_Quarter4082,"['Doesn’t psycopg3 have the ability to marshal to dataclasses ‘natively’?\nMaybe I am missing something though since I haven’t had a chance to test personally.\nhttps://www.psycopg.org/psycopg3/docs/advanced/typing.html#example-returning-records-as-pydantic-models', 'Can you handle JSON/JSONB[] fields?', ""How do you do async with psycopg? We're using `databases` with the `asyncpg` backend but this looks very interesting."", 'pip install porn didn’t work for me']"
Python Data model and Data Science Tutorials,14,https://www.reddit.com/r/Python/comments/1jh6tux/python_data_model_and_data_science_tutorials/,0,PhilipYip,[]
A Feature-rich Flask Web Application Template,9,https://www.reddit.com/r/Python/comments/1jf9ovo/a_featurerich_flask_web_application_template/,2,No_Pomegranate7508,"['Can you explain the major differences vs flask-cookiecutter, flask-app-builder and the others? Why flask-bootstrap and not its mantained fork, bootstrap-flask?']"
Arkalos Beta 3 with Google Extractor is Released - Modern Python Framework,6,https://www.reddit.com/r/Python/comments/1jidoz9/arkalos_beta_3_with_google_extractor_is_released/,2,Mevrael,"['This looks cool, but man is this a behemoth. \n\nNow a few questions, why wrap FastAPI? Looking at the module, I see little value added then just creating a uvicorn runner class ? \n\nA lot of double underscores which may lead to some name mangling for the less experienced users this is geared towards (and if I wanted to subclass ETLWorkflow for ex)? \n\nWhat’s wrong with the urllib.parse API vs the URL parse module you rolled out? \n\nAlso for any sql operations, and you want your class to stay agnostic, you should look at sqlglot.']"
Tutorial on using the Tableview Class from tkifrom tkinter/ttkbootstrap library to create table GUI,7,https://www.reddit.com/r/Python/comments/1jggpz8/tutorial_on_using_the_tableview_class_from/,0,xanthium_in,[]
Sunday Daily Thread: What's everyone working on this week?,5,https://www.reddit.com/r/Python/comments/1jhmdi1/sunday_daily_thread_whats_everyone_working_on/,3,AutoModerator,"['Currently I’m working on another text based game. I don’t have a name for it but it’s build like an rpg. The UI is in handmade ASCII and is displayed via the console. All you would need is something like VSC to run it. The user has 9 equipment slots. Head, neck 1, neck 2, torso, gloves, pants, boots, main hand, off hand. Each one can have 0-3 affixes applies to it. The affix list for each item varies. Currently I have it sorted into a couple categories. Generic, Armor Generic, and Weapon specific. I’m still working on the gear and affix system. I’m at around 800~ and I’m almost done with the affixes. Still working on all the gear types.', 'I\'m working on a framework for local/on-prem small-data processing/ETL and warehousing.  \n\n__Background__  \nI only deal with a couple thousand rows of data between a half dozen spreadsheets each month, and my team is only me. This project was inspired by my ad-hoc scripts becoming unwieldy, but not enough to pay for anything, or to deploy a more enterprise-level solution (e.g. Dagster, Databricks, etc.)\n\n__Features__  \nIt uses a decorator-API to wrap your Extract, Transform, and Load functions (which basically monkey-patch the user-defined functions as methods on the `Datasource` instances). It has support for metadata and logging, and is quite flexible. A simple example looks something like this:  \n\n\n```python\nimport polars as pl\n...\n\nfrom my_project import Datasource\n\nmy_data = Datasource(\n    name=""MyData"",\n    filename=r""C:/folder/*report.xlsx"",\n    ...\n)\n\n\n@my_data.extract_wrapper\ndef extract(datasource, *args, **kwargs) -> pl.DataFrame:\n    df = pl.read_excel(datasource.filename, ...)\n    datasource.logger.info(""Loaded raw data"")\n    return df  # Sets my_data.raw_data\n\n\n@my_data.transform_wrapper\ndef transform(datasource, *args, **kwargs) -> pl.DataFrame \n    df = datasource.raw_data ...  # do transformations\n    return df  # Sets my_data.data\n\n\n# load function, etc.\n\n```\n\nI\'m also working on the `Warehouse` object (a wrapper around a DuckDB database) that has functionality to parse SQL files for dependencies and sort them (the files) using `graphlib` before execution. I think this means that I\'m employing ""DAGs"" and I am therefore hip lol.  \n\nFinally, there\'s a command line utility that rebuilds the database/warehouse using your `Datasource`\'s, executing their ETL functions and running (sorted) SQL scripts. It can can run also run `Reports` (WIP).  \n\nAny comments are appreciated!  \n(Be critical; ClaudeAI has given me enough ego boosts lol)', 'Using flask and dns\\_lib to create a DDNS server to resolve any hostname of a CCTV NVR (Hikvision NVRs mostly) to non static IPs.']"
Saturday Daily Thread: Resource Request and Sharing! Daily Thread,7,https://www.reddit.com/r/Python/comments/1jgveqp/saturday_daily_thread_resource_request_and/,0,AutoModerator,[]
datamule-python: process securities and exchanges commission data at scale,4,https://www.reddit.com/r/Python/comments/1jj231k/datamulepython_process_securities_and_exchanges/,6,status-code-200,"['Edgartools is free? I just installed it the other day to check it out.\n\nIt didn’t necessarily work for my purposes (ifrs), but I figure modifying it is probably the easiest route to get IFRS financials.', ""What's a good package to get stock quotes?\n\nWhat is XBRL data anyway? Does it contain price quote and volume data perhaps? [Here we go](https://www.xbrl.org/the-standard/what/what-is-xbrl/).""]"
cMCP: A command-line utility for interacting with MCP servers.,6,https://www.reddit.com/r/Python/comments/1jhu9hg/cmcp_a_commandline_utility_for_interacting_with/,4,RussellLuo,['Slightly off topic but is a MCP server essentially just a locally running webserver (e.g. fastapi) endpoint?']
Tuesday Daily Thread: Advanced questions,3,https://www.reddit.com/r/Python/comments/1jj6387/tuesday_daily_thread_advanced_questions/,0,AutoModerator,[]
DRF + Next.js Web App,2,https://www.reddit.com/r/Python/comments/1jjsbw2/drf_nextjs_web_app/,8,Accurate_Ice_8256,"['Either of them is going to work. The web framework is almost never the thing that matters.', ""I'd say Django is good for scalable large projects, correct if I'm wrong."", 'You could check out [Reflex](https://reflex.dev/docs/getting-started/introduction/) and build the entire thing in one library. It wraps NextJS, and the backend is built on FastAPI, so you can leverage both.\n\nEdit: I’m not affiliated with Reflex or Pyncone (their former name but still their company name). The library is free to use. They make money via hosting which you can do straight from your repo, and they’re beta testing an LLM which helps build pages and such. I’ve used it in a few work and personal projects, and it’s actually pretty nice.', 'Flask if you want to build and host on your own. FastAPI for some help if needed.']"
Yore: Manage legacy code with comments,1,https://www.reddit.com/r/Python/comments/1jjkzqe/yore_manage_legacy_code_with_comments/,0,Pawamoy,[]
